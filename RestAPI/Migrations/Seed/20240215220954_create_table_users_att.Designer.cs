// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestAPI.Model.restDbContext;

#nullable disable

namespace RestAPI.Migrations
{
    [DbContext(typeof(rest_api_db_context))]
    [Migration("20240215220954_create_table_users_att")]
    partial class create_table_users_att
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RestAPI.Model.Livros", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estoque")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Preco")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("livros");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Autor = "Autor 1",
                            Estoque = true,
                            Nome = "Livro 1",
                            Preco = 18.989999999999998
                        },
                        new
                        {
                            Id = 2,
                            Autor = "Autor 2",
                            Estoque = false,
                            Nome = "Livro 2",
                            Preco = 28.989999999999998
                        },
                        new
                        {
                            Id = 3,
                            Autor = "Autor 3",
                            Estoque = true,
                            Nome = "Livro 3",
                            Preco = 38.990000000000002
                        },
                        new
                        {
                            Id = 4,
                            Autor = "Autor 4",
                            Estoque = false,
                            Nome = "Livro 4",
                            Preco = 48.990000000000002
                        },
                        new
                        {
                            Id = 5,
                            Autor = "Autor 5",
                            Estoque = true,
                            Nome = "Livro 5",
                            Preco = 58.990000000000002
                        },
                        new
                        {
                            Id = 6,
                            Autor = "Autor 6",
                            Estoque = false,
                            Nome = "Livro 6",
                            Preco = 68.989999999999995
                        });
                });

            modelBuilder.Entity("RestAPI.Model.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimeiroNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UltimoNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("pessoas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Endereco = "Rua A",
                            Genero = "Masculino",
                            PrimeiroNome = "João",
                            UltimoNome = "Silva"
                        },
                        new
                        {
                            Id = 2,
                            Endereco = "Rua B",
                            Genero = "Feminino",
                            PrimeiroNome = "Maria",
                            UltimoNome = "Santos"
                        },
                        new
                        {
                            Id = 3,
                            Endereco = "Rua C",
                            Genero = "Masculino",
                            PrimeiroNome = "Pedro",
                            UltimoNome = "Oliveira"
                        },
                        new
                        {
                            Id = 4,
                            Endereco = "Rua D",
                            Genero = "Feminino",
                            PrimeiroNome = "Ana",
                            UltimoNome = "Costa"
                        },
                        new
                        {
                            Id = 5,
                            Endereco = "Rua E",
                            Genero = "Masculino",
                            PrimeiroNome = "Lucas",
                            UltimoNome = "Pereira"
                        });
                });

            modelBuilder.Entity("RestAPI.Model.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(130)
                        .HasColumnType("nvarchar(130)");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "jonas e a baleia",
                            Password = "24-0B-E5-18-FA-BD-27-24-DD-B6-F0-4E-EB-1D-A5-96-74-48-D7-E8-31-C0-8C-8F-A8-22-80-9F-74-C7-20-A9",
                            RefreshToken = "h9lzVOoLlBoTbcQrh/e16/aIj+4p6C67lLdDbBRMsjE=",
                            RefreshTokenExpiryTime = new DateTime(2024, 2, 15, 19, 9, 54, 254, DateTimeKind.Local).AddTicks(9482),
                            UserName = "eu mesmo"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
